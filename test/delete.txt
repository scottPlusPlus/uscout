import { Form, useActionData } from "@remix-run/react";
import { ActionArgs } from "@remix-run/server-runtime";
import invariant from "tiny-invariant";

export const action = async ({ request }: ActionArgs) => {
    console.log("Server:  uScout Action");
    
    // TODO: remove
    await new Promise((res) => setTimeout(res, 1000));

    const formData = await request.formData();
    const inputUrl = formData.get("url");

    invariant(
        typeof inputUrl === "string",
        "input Url must be a string"
    );
    return { message: `Got "${inputUrl}"` };
};



export default function UScout() {
    const data = useActionData();
    const msg = data ? data.message : "";

    const validateForm = (event)=> {
        const form = event.target;
        const urlInput = form.querySelector('#url');
       
        const urlRegex = /^(?:https?|ftp):\/\/(?:[^@\/\n]+@)?(?:www\.)?([^:\/?\n]+\.[^\/?\n]+)(?::\d+)?(?:\/[^?#\n]*)?(?:\?[^#\n]*)?(?:#(?:[^#\n]*))?$/i;
        const validUrl = urlRegex.test(urlInput);

        if (!validUrl) {
          alert('Please submit a valid url');
          event.preventDefault();
        }
      }

    return (
        <div className="flex flex-col items-center h-screen">
        <Form
          method="post"
          id="upload-form"
          className="w-full md:w-1/2 max-w-sm mx-auto md:mx-0 md:mr-2"
        >
          <div className="flex items-center border-b border-b-2 border-teal-500 py-2">
            <input
              className="appearance-none bg-transparent border-none w-full text-gray-700 mr-3 py-1 px-2 leading-tight focus:outline-none"
              type="string"
              placeholder="URL"
              name="url"
              required
            />
            <button
              className="flex-shrink-0 bg-teal-500 hover:bg-teal-700 border-teal-500 hover:border-teal-700 text-sm border-4 text-white py-1 px-2 rounded"
              type="submit"
            >
              Submit
            </button>
          </div>
        </Form>
        {msg ? (
            <div className="w-full md:w-1/2 max-w-sm mx-auto md:mx-0 md:mr-2">
            <h2 className="text-lg font-medium leading-6 text-gray-900">
              Result
            </h2>
            <p className="mt-1 text-sm text-gray-600">{msg}</p>
            </div>
        ) : null}
      </div>
    );
  }


              >
                <div className="flex items-center border-b border-b-2 border-teal-500 py-2">
                    <input
                        className="appearance-none bg-transparent border-none w-full text-gray-700 mr-3 py-1 px-2 leading-tight focus:outline-none"
                        type="string"
                        placeholder="foo"
                        name="foo"
                        required
                    />
                    <button
                        className="flex-shrink-0 bg-teal-500 hover:bg-teal-700 border-teal-500 hover:border-teal-700 text-sm border-4 text-white py-1 px-2 rounded"
                        type="submit"
                    >
                        Submit
                    </button>
                </div>


function sanitizeUrl(input: string): string | null {
    input.trim();
    input = input.replace(/^https?:\/\//i, '');
    const urlRegex = /^([a-zA-Z0-9]+:\/\/)?[a-zA-Z0-9]+\.[^\s]{2,}$/i;
    const validUrl = urlRegex.test(input);
    if (!validUrl) {
        return null;
    }
    return input;
}


    const sanitizedUrl = sanitizeUrl(inputUrl);
    if (!sanitizedUrl){
        return { err: "Please submit a valid URL"}
    }

    const err = !data ? null : !data.err ? null : data.err;

